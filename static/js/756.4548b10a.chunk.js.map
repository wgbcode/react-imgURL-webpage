{"version":3,"file":"static/js/756.4548b10a.chunk.js","mappings":"oOAOMA,EAAUC,EAAAA,GAAAA,IAAH,8DAIPC,EAAQD,EAAAA,GAAAA,GAAH,gHAMLE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,kLAQVI,GAAWC,EAAAA,EAAAA,KAAS,YAAe,IAAZC,EAAW,EAAXA,KAC3B,EAAeH,EAAAA,EAAAA,UAARI,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MA4CjB,OACE,SAACV,EAAD,WACE,UAACG,EAAD,CACEI,KAAK,QACLI,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,SAjDW,SAACC,GAChB,IAAQC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SACL,aAATV,EACFW,EAAAA,EAAAA,SAAcF,EAAUC,GACrBE,MAAK,WACJV,EAAS,aAEVW,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAc,8CACdC,QAAQC,IAAIH,MAEE,UAATd,GACTW,EAAAA,EAAAA,MAAWF,EAAUC,GAClBE,MAAK,WACJV,EAAS,SACTgB,EAAAA,EAAAA,WACAC,OAAOR,KAAOA,EAAAA,KAEfE,OAAM,SAACC,GAAD,OAAWE,QAAQC,IAAIH,OAgC9BM,eA5BiB,SAACC,GACtBL,QAAQC,IAAI,UAAWI,IA4BnBC,aAAa,MACbrB,KAAMA,EAPR,WASE,SAACN,EAAD,UAAiB,aAATK,EAAsB,eAAO,kBACrC,SAACJ,EAAW2B,KAAZ,CACEC,MAAM,qBACNxB,KAAK,WACLyB,MAAO,CACL,CAAEC,UAAU,EAAMX,QAAS,wCAC3B,CAAEY,UAvBY,SAACC,EAAMC,GAC7B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,EAC9BF,QAAQC,OAAO,2CACjBD,QAAQG,aAcX,UAQE,SAAC,IAAD,OAGF,SAACtC,EAAW2B,KAAZ,CACEC,MAAM,2BACNxB,KAAK,WACLyB,MAAO,CACL,CAAEC,UAAU,EAAMX,QAAS,kCAC3B,CAAEoB,IAAK,EAAGpB,QAAS,+CACnB,CAAEqB,IAAK,GAAIrB,QAAS,iDANxB,UASE,SAAC,aAAD,MAGQ,aAATf,GACC,SAACJ,EAAW2B,KAAZ,CACEC,MAAM,2BACNxB,KAAK,UACLyB,MAAO,CAAC,CAAEC,UAAU,EAAMX,QAAS,IAtDrB,SAACsB,GAAD,MAAmB,CACzCV,UADyC,SAC/BC,EAAMC,GAEd,OAAIS,EADsBD,EAAlBC,eACU,cAAgBT,EACzBE,QAAQC,OAAO,wFAEjBD,QAAQG,cA6CX,UAKE,SAAC,aAAD,MAGF,IAGF,UAACtC,EAAW2B,KAAZ,CAAiBjB,WAAY,CAAEiC,OAAQ,EAAGlC,KAAM,GAAhD,WACE,SAAC,IAAD,CACEmC,KAAK,UACLC,SAAS,SACTC,MAAO,CAAEC,aAAc,MAAOC,YAAa,QAH7C,2BAOA,SAAC,IAAD,CACEH,SAAS,SACTI,QA3EM,WACd5C,EAAK6C,eA2EGJ,MAAO,CAAEC,aAAc,OAHzB,qCAaV,O,kDCpIA,UALiB,WAEf,OAAO,SAAC,IAAD,CAAU3C,KADJ","sources":["components/AuthForm.js","pages/Register.js"],"sourcesContent":["import { Auth } from \"../models/index\";\r\nimport { Button, Form, Input, message } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Stores from \"../stores/index\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 40vw;\r\n  margin-left: 30vw;\r\n`;\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  padding: 0 0 18px 0;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n`;\r\nconst StyledForm = styled(Form)`\r\n  margin-top: 72px;\r\n  padding: 16px 0;\r\n  border-radius: 4px;\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2),\r\n    -2px -2px 4px 0 rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst AuthForm = observer(({ name }) => {\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const onFinish = (values) => {\r\n    const { username, password } = values;\r\n    if (name === \"register\") {\r\n      Auth.register(username, password)\r\n        .then(() => {\r\n          navigate(\"/login\");\r\n        })\r\n        .catch((error) => {\r\n          message.error(\"用户名已存在！\");\r\n          console.log(error);\r\n        });\r\n    } else if (name === \"login\") {\r\n      Auth.login(username, password)\r\n        .then(() => {\r\n          navigate(\"/home\");\r\n          Stores.pullUser();\r\n          window.Auth = Auth;\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n  const passwordConfirm = (formInstance) => ({\r\n    validator(rule, value) {\r\n      const { getFieldValue } = formInstance;\r\n      if (getFieldValue(\"password\") !== value) {\r\n        return Promise.reject(\"输入密码不一致，请重新输入！\");\r\n      }\r\n      return Promise.resolve();\r\n    },\r\n  });\r\n  const usernameConfirm = (rule, value) => {\r\n    if (/\\W/.test(value)) return Promise.reject(\"只能是字母数字下划线\");\r\n    if (value.length < 3 || value.length > 8)\r\n      return Promise.reject(\"请输入3~8个字符\");\r\n    return Promise.resolve();\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <StyledForm\r\n        name=\"basic\"\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 14 }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n        form={form}\r\n      >\r\n        <Title>{name === \"register\" ? \"注册\" : \"登录\"}</Title>\r\n        <StyledForm.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[\r\n            { required: true, message: \"请输入用户名\" },\r\n            { validator: usernameConfirm },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </StyledForm.Item>\r\n\r\n        <StyledForm.Item\r\n          label=\"输入密码\"\r\n          name=\"password\"\r\n          rules={[\r\n            { required: true, message: \"请输入密码\" },\r\n            { min: 5, message: \"最少输入5个字符\" },\r\n            { max: 12, message: \"最多输入12个字符\" },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </StyledForm.Item>\r\n\r\n        {name === \"register\" ? (\r\n          <StyledForm.Item\r\n            label=\"确认密码\"\r\n            name=\"confirm\"\r\n            rules={[{ required: true, message: \"\" }, passwordConfirm]}\r\n          >\r\n            <Input.Password />\r\n          </StyledForm.Item>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <StyledForm.Item wrapperCol={{ offset: 6, span: 8 }}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{ borderRadius: \"4px\", marginRight: \"16px\" }}\r\n          >\r\n            提交\r\n          </Button>\r\n          <Button\r\n            htmlType=\"button\"\r\n            onClick={onReset}\r\n            style={{ borderRadius: \"4px\" }}\r\n          >\r\n            重置\r\n          </Button>\r\n        </StyledForm.Item>\r\n      </StyledForm>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"../components/AuthForm\";\r\n\r\nconst Register = () => {\r\n  const name = \"register\";\r\n  return <AuthForm name={name} />;\r\n};\r\n\r\nexport default Register;\r\n"],"names":["Wrapper","styled","Title","StyledForm","Form","AuthForm","observer","name","form","navigate","useNavigate","labelCol","span","wrapperCol","onFinish","values","username","password","Auth","then","catch","error","message","console","log","Stores","window","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","validator","rule","value","test","Promise","reject","length","resolve","min","max","formInstance","getFieldValue","offset","type","htmlType","style","borderRadius","marginRight","onClick","resetFields"],"sourceRoot":""}